!function(){
  "use strict";
  const t = document.getElementsByClassName("tg");

  function e(t, e) {
    t.classList.add("tb");
    e.style.maxHeight = e.scrollHeight + "px";
  }

  function n(t, e) {
    t.classList.remove("tb");
    e.style.maxHeight = null;
  }

  if (t.length > 0) {
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      const a = s.parentNode;
      const l = s.nextElementSibling;

      if (a.classList.contains("tb")) {
        e(a, l);
      }

      s.addEventListener("click", function() {
        if (a.classList.contains("tb")) {
          n(a, l);
        } else {
          e(a, l);
        }
      });
    }
  }
}(),

function() {
  "use strict";

  let t = {
    touchStartX: 0,
    touchEndX: 0,
    minSwipePixels: 30,
    detectionZone: undefined,
    swipeCallback: function() {},
    init: function(e, n) {
      t.swipeCallback = n;
      e.addEventListener("touchstart", function(e) {
        t.touchStartX = e.changedTouches[0].screenX;
      }, false);
      e.addEventListener("touchend", function(e) {
        t.touchEndX = e.changedTouches[0].screenX;
        t.handleSwipeGesture();
      }, false);
    },
    handleSwipeGesture: function() {
      let e, n;
      if (t.touchEndX <= t.touchStartX) {
        n = t.touchStartX - t.touchEndX;
        e = "left";
      }
      if (t.touchEndX >= t.touchStartX) {
        n = t.touchEndX - t.touchStartX;
        e = "right";
      }
      if (n > t.minSwipePixels && typeof e !== "undefined") {
        t.swipe(e, n);
      }
    },
    swipe: function(e, n) {
      let i = {};
      i.direction = e;
      i.movedPixels = n;
      t.swipeCallback(i);
    },
  };

  const e = document.getElementsByClassName("carousel-items");

  function i(t, e) {
    if (typeof e === "undefined") {
      e = "next";
    }
    let n = t.getElementsByClassName("tz tb")[0];
    let i = "next" === e ? n.nextElementSibling : n.previousElementSibling;
    const s = n.getAttribute("data-carousel");
    const a = t.parentNode.getElementsByClassName("nt")[s];
    const l = "next" === e ? a.nextElementSibling : a.previousElementSibling;
    n.classList.remove("tb");
    a.classList.remove("tb");
    if (i) {
      i.classList.add("tb");
      l.classList.add("tb");
    } else if ("next" === e) {
      t.firstElementChild.classList.add("tb");
      t.parentNode.getElementsByClassName("ne")[0].firstElementChild.classList.add("tb");
    } else {
      t.lastElementChild.classList.add("tb");
      t.parentNode.getElementsByClassName("ne")[0].lastElementChild.classList.add("tb");
    }
  }

  function s(t) {
    if (t) {
      clearInterval(t);
    }
  }

  if (e.length > 0) {
    for (let a = 0; a < e.length; a++) {
      let l = e[a];
      const r = l.getElementsByClassName("tz");
      let o = 0;
      const c = l.getAttribute("data-autorotate");
      const d = document.createElement("div");
      d.className = "ne";
      l.parentNode.insertBefore(d, l.nextSibling);

      for (let t = 0; t < r.length; t++) {
        r[t].setAttribute("data-carousel", t);
        if (r[t].classList.contains("tb")) {
          o = t;
        }
        let e = document.createElement("tbuttonn");
        e.className = "nt";
        e.setAttribute("data-bullet", t);
        l.parentNode.getElementsByClassName("ne")[0].appendChild(e);
      }

      r[o].classList.add("tb");
      let u = l.parentNode.getElementsByClassName("nt");
      u[o].classList.add("tb");
      i(0, r);
      window.addEventListener("resize", function() {
        i(0, r);
      });

      let m = false;
      if (c) {
        m = setInterval(function() {
          n(l, "next");
        }, c);
      }

      for (let t = 0; t < u.length; t++) {
        let e = u[t];
        e.addEventListener("click", function(t) {
          if (t.preventDefault(), e.classList.contains("tb")) {
            return;
          }
          for (let t = 0; t < u.length; t++) {
            u[t].classList.remove("tb");
          }
          for (let t = 0; t < r.length; t++) {
            r[t].classList.remove("tb");
          }
          let n = this.getAttribute("data-bullet");
          r[n].classList.add("tb");
          this.classList.add("tb");
          s(m);
        });
      }
      t.init(l, function(t) {
        if ("left" === t.direction) {
          n(l, "next");
        } else if ("right" === t.direction) {
          n(l, "prev");
        }
        s(m);
      });
    }
  }
}(),

function() {
  "use strict";
  document.documentElement.classList.remove("no-js");
  document.documentElement.classList.add("js");
  window.addEventListener("load", function() {
    document.body.classList.add("n");
  });
}(),

function() {
  "use strict";
  const t = document.getElementById("th");
  const e = document.getElementById("nj");
  if (t) {
    t.addEventListener("click", function() {
      document.body.classList.toggle("tv");
      e.classList.toggle("tb");
      if (e.style.maxHeight) {
        e.style.maxHeight = null;
      } else {
        e.style.maxHeight = e.scrollHeight + "px";
      }
      if (this.getAttribute("aria-expanded") === "true") {
        this.setAttribute("aria-expanded", "false");
      } else {
        this.setAttribute("aria-expanded", "true");
      }
    });
    document.addEventListener("click", function(n) {
      if (n.target === e || n.target === t || e.contains(n.target)) {
        return;
      }
      document.body.classList.remove("tv");
      e.classList.remove("tb");
      e.style.maxHeight = null;
      t.setAttribute("aria-expanded", "false");
    });
  }
}(),

function() {
  "use strict";
  const t = document.getElementsByClassName("tx");
  const e = document.getElementsByClassName("modal-trigger");

  function n() {
    document.body.classList.remove("modal-is-active");
    for (let e = 0; e < t.length; e++) {
      t[e].classList.remove("tb");
    }
  }

  if (t.length > 0 && e.length > 0) {
    for (let t = 0; t < e.length; t++) {
      let i = e[t];
      let s = document.getElementById(i.getAttribute("aria-controls"));
      if (s) {
        if (i.hasAttribute("data-video")) {
          if (null !== s.querySelector("iframe")) {
            s.querySelector("iframe").setAttribute("src", i.getAttribute("data-video"));
          } else if (null !== s.querySelector("video")) {
            s.querySelector("video").setAttribute("src", i.getAttribute("data-video"));
          }
        }
        i.addEventListener("click", function(t) {
          var e;
          t.preventDefault();
          if (i.hasAttribute("aria-controls")) {
            e = s;
          }
          document.body.classList.add("modal-is-active");
          e.classList.add("tb");
        });
      }
    }
    document.addEventListener("click", function(t) {
      if (t.target.classList.contains("tx") || t.target.classList.contains("modal-close-trigger")) {
        t.preventDefault();
        n();
      }
    });
    document.addEventListener("keydown", function(t) {
      if ((t || window.event).keyCode === 27) {
        n();
      }
    });
  }
}(),

function() {
  "use strict";
  const t = document.querySelectorAll(".ie");

  if (t.length > 0) {
    for (let n = 0; n < t.length; n++) {
      const i = t[n];
      const s = { el: i.querySelector("input") };
      s.data = JSON.parse(s.el.getAttribute("data-price-input"));
      s.currentValEl = i.querySelector(".it");
      s.thumbSize = parseInt(window.getComputedStyle(s.currentValEl).getPropertyValue("--thumb-size"), 10);
      const a = i.parentNode.querySelectorAll(".pricing-item-price");
      const l = [];
      for (let t = 0; t < a.length; t++) {
        const e = a[t];
        const n = {};
        n.currency = e.parentNode.querySelector(".iw");
        n.amount = e.parentNode.querySelector(".pricing-item-price-amount");
        n.after = e.parentNode.querySelector(".pricing-item-price-after");
        n.data = JSON.parse(e.getAttribute("data-price-output"));
        l.push(n);
      }
      s.el.setAttribute("min", 0);
      s.el.setAttribute("max", Object.keys(s.data).length - 1);
      if (!s.el.getAttribute("value")) {
        s.el.setAttribute("value", 0);
      }
      e(s, l);
      window.addEventListener("input", function() {
        e(s, l);
      });
    }
  }

  function e(t, e) {
    t.currentValEl && (t.currentValEl.innerHTML = t.data[t.el.value]);
    for (let n = 0; n < e.length; n++) {
      const i = e[n];
      const s = t.el.checked ? 1 : 0;
      i.currency && (i.currency.innerHTML = i.data[s][0]);
      i.amount && (i.amount.innerHTML = i.data[s][1]);
      i.after && (i.after.innerHTML = i.data[s][2]);
    }
    (function(t) {
      const e = t.el.value / t.el.max;
      const n = t.thumbSize * e;
      const i = (t.thumbSize - t.currentValEl.clientWidth) / 2;
      t.currentValEl.style.left = t.el.clientWidth * e - n + i + "px";
    })(t);
  }
}(),

function() {
  "use strict";
  const t = document.querySelectorAll(".rz");
  if (t.length > 0) {
    for (let n = 0; n < t.length; n++) {
      const i = t[n];
      const s = i.querySelector("input");
      const a = i.parentNode.querySelectorAll(".pricing-item-price");
      const l = [];
      for (let t = 0; t < a.length; t++) {
        const e = a[t];
        const n = {};
        n.currency = e.parentNode.querySelector(".iw");
        n.amount = e.parentNode.querySelector(".pricing-item-price-amount");
        n.after = e.parentNode.querySelector(".pricing-item-price-after");
        n.data = JSON.parse(e.getAttribute("data-price-output"));
        l.push(n);
      }
      e(s, l);
      window.addEventListener("change", function() {
        e(s, l);
      });
    }
  }

  function e(t, e) {
    for (let n = 0; n < e.length; n++) {
      const i = e[n];
      const s = t.checked ? 1 : 0;
      i.currency && (i.currency.innerHTML = i.data[s][0]);
      i.amount && (i.amount.innerHTML = i.data[s][1]);
      i.after && (i.after.innerHTML = i.data[s][2]);
    }
  }
}(),

function() {
  "use strict";
  const t = document.querySelectorAll("[class*=reveal-]");
  let e = window.innerHeight;

  function n(t) {
    let n = 0;
    return function() {
      let i = new Date().getTime();
      if (i - n < t) {
        return;
      }
      n = i;
      t.apply(undefined, arguments);
    };
  }

  function i() {
    for (let i = 0; i < t.length; i++) {
      let s = t[i];
      let a = s.getAttribute("data-reveal-delay");
      let l = s.getAttribute("data-reveal-offset") ? s.getAttribute("data-reveal-offset") : "200";
      let r = (s.getAttribute("data-reveal-container") ? s.closest(s.getAttribute("data-reveal-container")) : s).getBoundingClientRect().top;
      if (r <= e - l && !s.classList.contains("is-revealed")) {
        if (a && a !== 0) {
          setTimeout(function() {
            s.classList.add("is-revealed");
          }, a);
        } else {
          s.classList.add("is-revealed");
        }
      }
    }
    if (t.length <= document.querySelectorAll("[class*=reveal-].is-revealed").length) {
      window.removeEventListener("load", i);
      window.removeEventListener("scroll", s);
      window.removeEventListener("resize", a);
    }
  }

  function s() {
    n(30, i())();
  }

  function a() {
    e = window.innerHeight;
    n(30, i())();
  }

  if (t.length > 0 && document.body.classList.contains("t")) {
    window.addEventListener("load", i);
    window.addEventListener("scroll", s);
    window.addEventListener("resize", a);
  }
}(),

function() {
  "use strict";
  const t = document.getElementsByClassName("smooth-scroll");

  const e = function(t, e, n, i, s) {
    const a = n - t;
    let l = a / e;
    const r = function(t) {
      return t < 0.5 ? 2 * t * t : (4 - 2 * t) * t - 1;
    }(l = Math.min(l, 1));

    window.scroll(0, s + i * r);

    if (a < e) {
      window.requestAnimationFrame(() => {
        const n = (new Date).getTime();
        e(t, n, i, s, a);
      });
    }
  };

  if (t.length > 0) {
    for (let n = 0; n < t.length; n++) {
      t[n].addEventListener("click", function(t) {
        t.preventDefault();
        const n = t.target.closest(".smooth-scroll");
        const i = n.href.split("#")[1];
        const s = document.getElementById(i);
        const a = n.getAttribute("data-duration") || 1000;
        if (s) {
          window.requestAnimationFrame(() => {
            const t = (new Date).getTime();
            e(t, t, a, s.getBoundingClientRect().top, window.pageYOffset);
          });
        }
      });
    }
  }
}(),

function() {
  "use strict";
  const t = document.getElementsByClassName("nr");

  function e(t) {
    let e = t.getAttribute("aria-controls");
    document.getElementById(e).classList.add("tb");
    t.classList.add("tb");
  }

  if (t.length > 0) {
    for (let n = 0; n < t.length; n++) {
      let i = t[n];
      i.addEventListener("click", function(n) {
        n.preventDefault();
        const i = this.closest(".tabs").getElementsByClassName("ni");
        if (!this.classList.contains("tb")) {
          for (let t = 0; t < t.length; t++) {
            t[t].classList.remove("tb");
          }
          for (let t = 0; t < i.length; t++) {
            i[t].classList.remove("tb");
          }
          e(this);
        }
      });
      if (i.classList.contains("tb")) {
        e(i);
      }
    }
  }
}();
